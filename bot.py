import os
import asyncio
import logging
import tempfile
import yt_dlp
import re
import time
import random
from pyrogram import Client, filters
from pyrogram.errors import BadRequest, BadMsgNotification

API_ID = 26670278
API_HASH = "e3d77390fd9c22d98bb6bddca86fef1a"
BOT_TOKEN = "6788128988:AAEMmCSafiiEqtS5UWQQxfo--W0On7B6Q08"

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
user_processing = {}
processed_messages = set()

class SafeClient(Client):
    async def send(self, *args, **kwargs):
        for attempt in range(3):
            try:
                return await super().send(*args, **kwargs)
            except BadMsgNotification as e:
                if e.error_code == 16:
                    logger.warning(f"BadMsgNotification [16], –ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}/3")
                    self.session.msg_id_offset = int(time.time() * 2**32)
                    await asyncio.sleep(1)
                else:
                    raise
        raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å msg_id —Å Telegram")

app = SafeClient(
    "video_bot_new_session_2024",
    api_id=API_ID,
    api_hash=API_HASH,
    bot_token=BOT_TOKEN,
    sleep_threshold=15
)

# ------------------------- –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï YOUTUBE –§–£–ù–ö–¶–ò–ò -------------------------

def get_youtube_direct_url(url: str) -> str:
    """–ü–æ–ª—É—á–∞–µ–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ"""
    ydl_opts = {
        "quiet": True,
        "skip_download": True,
        "format": "best[height<=480][ext=mp4]/best[height<=720][ext=mp4]/best[ext=mp4]/best",
        "noplaylist": True,
        "ignoreerrors": True,
        "http_headers": {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36",
            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
        }
    }
    
    try:
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=False)
            
            if not info:
                raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ")
                
            if 'url' in info:
                return info['url']
            
            elif 'formats' in info:
                formats = info['formats']
                available_formats = [f for f in formats if f.get('url') and f.get('ext') == 'mp4']
                if available_formats:
                    available_formats.sort(key=lambda x: x.get('height', 0))
                    for fmt in available_formats:
                        if fmt.get('height', 0) <= 480:
                            return fmt['url']
                    return available_formats[0]['url']
            
            raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è YouTube URL: {e}")
        raise

def download_youtube_video(url: str, out_path: str) -> str:
    """–°–∫–∞—á–∏–≤–∞–µ–º YouTube –≤–∏–¥–µ–æ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ñ–∞–π–ª–∞"""
    ydl_opts = {
        "outtmpl": os.path.join(out_path, "%(title).100s.%(ext)s"),
        "format": "best[height<=480][ext=mp4]/best[height<=720][ext=mp4]/best[ext=mp4]/best",
        "noplaylist": True,
        "quiet": False,
        "ignoreerrors": True,
        "retries": 5,
        "fragment_retries": 5,
        "skip_unavailable_fragments": True,
        "continue_dl": True,
        "no_overwrites": True,
        "merge_output_format": "mp4",
        "http_headers": {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36",
        }
    }
    
    try:
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            time.sleep(random.uniform(1, 2))
            
            info = ydl.extract_info(url, download=True)
            if not info:
                raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ")
                
            filename = ydl.prepare_filename(info)
            
            # –ü–†–û–í–ï–†–Ø–ï–ú –ß–¢–û –§–ê–ô–õ –°–£–©–ï–°–¢–í–£–ï–¢ –ò –ù–ï –ü–£–°–¢–û–ô
            if not os.path.exists(filename):
                raise Exception(f"–§–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω: {filename}")
                
            file_size = os.path.getsize(filename)
            if file_size == 0:
                os.remove(filename)
                raise Exception(f"–§–∞–π–ª –ø—É—Å—Ç–æ–π: {filename}")
                
            logger.info(f"‚úÖ YouTube –≤–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ: {filename} ({file_size} bytes)")
            return filename
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è YouTube: {e}")
        raise

def safe_send_video(client, chat_id, file_path, caption=""):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ –ø—É—Å—Ç–æ–π
        if not os.path.exists(file_path):
            raise Exception(f"–§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {file_path}")
            
        file_size = os.path.getsize(file_path)
        if file_size == 0:
            raise Exception(f"–§–∞–π–ª –ø—É—Å—Ç–æ–π: {file_path}")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (Telegram –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ ~2GB)
        if file_size > 1900 * 1024 * 1024:  # 1.9GB
            raise Exception("–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –¥–ª—è Telegram")
            
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
        return client.send_video(
            chat_id=chat_id,
            video=file_path,
            caption=caption,
            supports_streaming=True
        )
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ: {e}")
        raise

# ------------------------- –û–°–¢–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò -------------------------

def extract_first_url(text: str) -> str:
    match = re.search(r"(https?://[^\s]+)", text)
    return match.group(1) if match else ""

def normalize_url(url: str) -> str:
    if "youtu.be/" in url:
        video_id = url.split("/")[-1].split("?")[0]
        return f"https://www.youtube.com/watch?v={video_id}"
    if "youtube.com/shorts/" in url:
        video_id = url.split("/shorts/")[-1].split("?")[0]
        return f"https://www.youtube.com/watch?v={video_id}"
    return url

def check_cookies_file():
    if not os.path.exists("cookies.txt"):
        logger.error("‚ùå –§–∞–π–ª cookies.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    logger.info("‚úÖ –§–∞–π–ª cookies.txt –Ω–∞–π–¥–µ–Ω")
    return True

def get_instagram_url(url: str) -> str:
    if not check_cookies_file():
        raise FileNotFoundError("–§–∞–π–ª cookies.txt –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    
    ydl_opts = {
        "quiet": True,
        "skip_download": True,
        "format": "best[ext=mp4]/best",
        "cookiefile": "cookies.txt",
    }
    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        info = ydl.extract_info(url, download=False)
        return info.get("url")

def download_instagram_video(url: str, out_path: str) -> str:
    if not check_cookies_file():
        raise FileNotFoundError("–§–∞–π–ª cookies.txt –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    
    ydl_opts = {
        "outtmpl": os.path.join(out_path, "%(title).100s.%(ext)s"),
        "format": "best[ext=mp4]/best",
        "cookiefile": "cookies.txt",
        "quiet": True,
    }
    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        info = ydl.extract_info(url, download=True)
        filename = ydl.prepare_filename(info)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª
        if not os.path.exists(filename):
            raise Exception(f"–§–∞–π–ª Instagram –Ω–µ —Å–æ–∑–¥–∞–Ω: {filename}")
            
        file_size = os.path.getsize(filename)
        if file_size == 0:
            os.remove(filename)
            raise Exception(f"–§–∞–π–ª Instagram –ø—É—Å—Ç–æ–π: {filename}")
            
        return filename

# ------------------------- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò -------------------------

@app.on_message(filters.command("start"))
async def start(client, message):
    message_id = f"start_{message.id}_{message.from_user.id}"
    
    if message_id in processed_messages:
        return
        
    processed_messages.add(message_id)
    
    await message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! üëã\n\n"
        "üì• –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ Instagram –∏–ª–∏ YouTube ‚Äî —è —Å–∫–∞—á–∞—é –≤–∏–¥–µ–æ –¥–ª—è —Ç–µ–±—è.\n\n"
        "‚ö° –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è YouTube Shorts!\n"
        "üîÑ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤"
    )

@app.on_message(filters.command(["help", "info"]))
async def help_command(client, message):
    message_id = f"help_{message.id}_{message.from_user.id}"
    
    if message_id in processed_messages:
        return
        
    processed_messages.add(message_id)
    
    await message.reply_text(
        "ü§ñ **–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É**\n\n"
        "üì• –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å—Å—ã–ª–∫–∏:\n"
        "‚Ä¢ Instagram –≤–∏–¥–µ–æ/—Ä–µ–µ–ª—å—Å\n" 
        "‚Ä¢ YouTube –≤–∏–¥–µ–æ\n"
        "‚Ä¢ YouTube Shorts\n\n"
        "‚ö° –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–æ –∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ!"
    )

@app.on_message(filters.text & filters.private)
async def handle_text(client, message):
    if message.text.startswith('/'):
        return
    
    message_id = f"text_{message.id}_{message.from_user.id}"
    
    if message_id in processed_messages:
        return
        
    user_id = message.from_user.id
    text = message.text.strip()
    
    url = extract_first_url(text)
    if not url or not any(d in url for d in ["youtube.com", "youtu.be", "instagram.com"]):
        return

    processed_messages.add(message_id)
    
    if user_id in user_processing and user_processing[user_id].get('processing'):
        temp_msg = await message.reply_text("‚è≥ –í–∞—à –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∑–∞–ø—Ä–æ—Å –µ—â–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...")
        await asyncio.sleep(3)
        await temp_msg.delete()
        processed_messages.discard(message_id)
        return

    user_processing[user_id] = {'processing': True}
    status = None
    
    try:
        url = normalize_url(url)
        status = await message.reply_text("‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ...")
        
        if "youtube" in url or "youtu.be" in url:
            # YouTube –æ–±—Ä–∞–±–æ—Ç–∫–∞
            tmp_dir = tempfile.mkdtemp()
            file_path = None
            
            try:
                # –ü—Ä–æ–±—É–µ–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É
                await status.edit_text("üîó –ü–æ–ª—É—á–∞—é –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É YouTube...")
                try:
                    direct_url = await asyncio.to_thread(get_youtube_direct_url, url)
                    await status.edit_text("üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ...")
                    await message.reply_video(
                        direct_url, 
                        caption="üì• YouTube –≤–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ —á–µ—Ä–µ–∑ @azams_bot"
                    )
                    logger.info("‚úÖ YouTube –≤–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É")
                    
                except Exception as e:
                    logger.warning(f"‚ùå –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞: {e}, —Å–∫–∞—á–∏–≤–∞—é —Ñ–∞–π–ª...")
                    await status.edit_text("üì• –°–∫–∞—á–∏–≤–∞—é YouTube –≤–∏–¥–µ–æ...")
                    
                    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
                    file_path = await asyncio.to_thread(download_youtube_video, url, tmp_dir)
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
                    if not os.path.exists(file_path):
                        raise Exception("–§–∞–π–ª –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω –ø–æ—Å–ª–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
                        
                    file_size = os.path.getsize(file_path)
                    logger.info(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} bytes")
                    
                    await status.edit_text("üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ...")
                    
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
                    await safe_send_video(
                        client,
                        message.chat.id,
                        file_path,
                        caption="üì• YouTube –≤–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ —á–µ—Ä–µ–∑ @azams_bot"
                    )
                    logger.info("‚úÖ YouTube –≤–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–∞–∫ —Ñ–∞–π–ª")

            finally:
                # –û–ß–ò–°–¢–ö–ê –í –õ–Æ–ë–û–ú –°–õ–£–ß–ê–ï
                if file_path and os.path.exists(file_path):
                    try:
                        os.remove(file_path)
                        logger.info(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: {file_path}")
                    except Exception as e:
                        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª {file_path}: {e}")
                
                if os.path.exists(tmp_dir):
                    try:
                        # –£–¥–∞–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ
                        for file in os.listdir(tmp_dir):
                            file_to_remove = os.path.join(tmp_dir, file)
                            if os.path.exists(file_to_remove):
                                os.remove(file_to_remove)
                        os.rmdir(tmp_dir)
                        logger.info(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞: {tmp_dir}")
                    except Exception as e:
                        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É {tmp_dir}: {e}")
                
        elif "instagram.com" in url:
            # Instagram –æ–±—Ä–∞–±–æ—Ç–∫–∞
            if not os.path.exists("cookies.txt"):
                await status.edit_text("‚ùå –§–∞–π–ª cookies.txt –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                await asyncio.sleep(5)
                await status.delete()
                return
                
            tmp_dir = tempfile.mkdtemp()
            file_path = None
            
            try:
                await status.edit_text("üîó –ü–æ–ª—É—á–∞—é –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É Instagram...")
                try:
                    direct_url = await asyncio.to_thread(get_instagram_url, url)
                    if direct_url:
                        await status.edit_text("üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ...")
                        await message.reply_video(
                            direct_url, 
                            caption="üì• Instagram –≤–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ —á–µ—Ä–µ–∑ @azams_bot"
                        )
                        logger.info("‚úÖ Instagram –≤–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É")
                    else:
                        raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É")
                    
                except Exception as e:
                    logger.warning(f"‚ùå –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ Instagram –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞: {e}, —Å–∫–∞—á–∏–≤–∞—é —Ñ–∞–π–ª...")
                    await status.edit_text("üì• –°–∫–∞—á–∏–≤–∞—é Instagram –≤–∏–¥–µ–æ...")
                    
                    file_path = await asyncio.to_thread(download_instagram_video, url, tmp_dir)
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª
                    if not os.path.exists(file_path):
                        raise Exception("–§–∞–π–ª Instagram –Ω–µ —Å–æ–∑–¥–∞–Ω")
                        
                    await status.edit_text("üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ...")
                    
                    await safe_send_video(
                        client,
                        message.chat.id,
                        file_path,
                        caption="üì• Instagram –≤–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ —á–µ—Ä–µ–∑ @azams_bot"
                    )
                    logger.info("‚úÖ Instagram –≤–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–∞–∫ —Ñ–∞–π–ª")

            finally:
                # –û—á–∏—Å—Ç–∫–∞ –¥–ª—è Instagram
                if file_path and os.path.exists(file_path):
                    try:
                        os.remove(file_path)
                    except:
                        pass
                
                if os.path.exists(tmp_dir):
                    try:
                        for file in os.listdir(tmp_dir):
                            file_to_remove = os.path.join(tmp_dir, file)
                            if os.path.exists(file_to_remove):
                                os.remove(file_to_remove)
                        os.rmdir(tmp_dir)
                    except:
                        pass

        # –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        await message.delete()

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
        
        if status:
            try:
                error_msg = await message.reply_text(
                    f"‚ùå –û—à–∏–±–∫–∞: {str(e)[:100]}...\n\n"
                    "üì• –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
                )
                await asyncio.sleep(8)
                await error_msg.delete()
            except:
                pass
                
    finally:
        if status:
            try:
                await status.delete()
            except:
                pass
        if user_id in user_processing:
            user_processing[user_id]['processing'] = False

# ------------------------- –ó–ê–ü–£–°–ö -------------------------
if __name__ == "__main__":
    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–µ—Å—Å–∏–π
    old_sessions = ["fast_bot.session", "fast_bot.session-journal"]
    for session_file in old_sessions:
        if os.path.exists(session_file):
            try:
                os.remove(session_file)
                logger.info(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª —Å–µ—Å—Å–∏–∏: {session_file}")
            except Exception as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {session_file}: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ cookies
    if os.path.exists("cookies.txt"):
        logger.info("‚úÖ –§–∞–π–ª cookies.txt –Ω–∞–π–¥–µ–Ω")
    else:
        logger.warning("‚ö†Ô∏è –§–∞–π–ª cookies.txt –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Ñ–∞–π–ª–æ–≤...")
    app.run()
