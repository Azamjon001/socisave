import os
import asyncio
import logging
import tempfile
import yt_dlp
import re
import time
import random
import requests
from pyrogram import Client, filters
from pyrogram.errors import BadRequest, BadMsgNotification

API_ID = 26670278
API_HASH = "e3d77390fd9c22d98bb6bddca86fef1a"
BOT_TOKEN = "6788128988:AAEMmCSafiiEqtS5UWQQxfo--W0On7B6Q08"

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
user_processing = {}
processed_messages = set()

class SafeClient(Client):
    async def send(self, *args, **kwargs):
        for attempt in range(3):
            try:
                return await super().send(*args, **kwargs)
            except BadMsgNotification as e:
                if e.error_code == 16:
                    logger.warning(f"BadMsgNotification [16], –ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}/3")
                    self.session.msg_id_offset = int(time.time() * 2**32)
                    await asyncio.sleep(1)
                else:
                    raise
        raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å msg_id —Å Telegram")

app = SafeClient(
    "video_bot_new_session_2024",
    api_id=API_ID,
    api_hash=API_HASH,
    bot_token=BOT_TOKEN,
    sleep_threshold=15
)

# ------------------------- YOUTUBE –§–£–ù–ö–¶–ò–ò -------------------------

def download_youtube_video(url: str, out_path: str) -> str:
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ YouTube –≤–∏–¥–µ–æ"""
    ydl_opts = {
        "outtmpl": os.path.join(out_path, "%(title).100s.%(ext)s"),
        "format": "best[height<=720]/best",
        "noplaylist": True,
        "quiet": False,
        "ignoreerrors": True,
        "retries": 3,
    }
    
    try:
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=True)
            filename = ydl.prepare_filename(info)
            
            if not os.path.exists(filename):
                raise Exception(f"–§–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω: {filename}")
                
            file_size = os.path.getsize(filename)
            if file_size == 0:
                os.remove(filename)
                raise Exception(f"–§–∞–π–ª –ø—É—Å—Ç–æ–π: {filename}")
                
            logger.info(f"‚úÖ YouTube –≤–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ: {filename}")
            return filename
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ YouTube: {e}")
        raise

# ------------------------- INSTAGRAM –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ï –ú–ï–¢–û–î–´ -------------------------

def check_cookies_file():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º cookies —Ñ–∞–π–ª"""
    if not os.path.exists("cookies.txt"):
        return False
    
    file_size = os.path.getsize("cookies.txt")
    if file_size == 0:
        return False
        
    return True

def try_instagram_public(url: str, out_path: str):
    """–ü—Ä–æ–±—É–µ–º —Å–∫–∞—á–∞—Ç—å —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã (–±–µ–∑ cookies)"""
    try:
        ydl_opts = {
            "outtmpl": os.path.join(out_path, "instagram_%(title)s.%(ext)s"),
            "quiet": False,
            "ignoreerrors": True,
            "retries": 2,
            "extract_flat": False,
        }
        
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=True)
            
            # –ò—â–µ–º –ª—é–±–æ–π —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
            for file in os.listdir(out_path):
                file_path = os.path.join(out_path, file)
                if os.path.isfile(file_path) and os.path.getsize(file_path) > 0:
                    return file_path, info
            
            raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥")
            
    except Exception as e:
        raise Exception(f"–ü—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e}")

def try_instagram_with_cookies(url: str, out_path: str):
    """–ü—Ä–æ–±—É–µ–º —Å–∫–∞—á–∞—Ç—å —Å cookies"""
    if not check_cookies_file():
        raise Exception("Cookies —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    try:
        ydl_opts = {
            "outtmpl": os.path.join(out_path, "instagram_%(title)s.%(ext)s"),
            "cookiefile": "cookies.txt",
            "quiet": False,
            "ignoreerrors": True,
            "retries": 3,
            "extract_flat": False,
        }
        
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=True)
            
            # –ò—â–µ–º –ª—é–±–æ–π —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
            for file in os.listdir(out_path):
                file_path = os.path.join(out_path, file)
                if os.path.isfile(file_path) and os.path.getsize(file_path) > 0:
                    return file_path, info
            
            raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –¥–∞–∂–µ —Å cookies")
            
    except Exception as e:
        raise Exception(f"–ú–µ—Ç–æ–¥ —Å cookies –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e}")

def download_instagram_all_methods(url: str, out_path: str):
    """–ü—Ä–æ–±—É–µ–º –≤—Å–µ –º–µ—Ç–æ–¥—ã —Å–∫–∞—á–∏–≤–∞–Ω–∏—è Instagram"""
    methods = [
        ("–ü—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥", try_instagram_public),
        ("–ú–µ—Ç–æ–¥ —Å cookies", try_instagram_with_cookies),
    ]
    
    last_error = None
    
    for method_name, method_func in methods:
        try:
            logger.info(f"üîÑ –ü—Ä–æ–±—É—é {method_name}...")
            return method_func(url, out_path)
        except Exception as e:
            last_error = e
            logger.warning(f"‚ùå {method_name} –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e}")
            time.sleep(2)
            continue
    
    raise Exception(f"–í—Å–µ –º–µ—Ç–æ–¥—ã Instagram –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏. Instagram –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")

# ------------------------- INSTAGRAM WEB API ALTERNATIVE -------------------------

def download_instagram_fallback(url: str) -> str:
    """–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ –≤–µ–±-–∑–∞–ø—Ä–æ—Å—ã (–¥–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤)"""
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–æ—Ä–æ–Ω–Ω–∏–π —Å–µ—Ä–≤–∏—Å –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
        # –≠—Ç–æ –ø—Ä–∏–º–µ—Ä - –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π API
        service_url = f"https://instasupersave.com/api/ig"
        
        response = requests.post(service_url, json={"url": url}, timeout=30)
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success') and data.get('url'):
                # –°–∫–∞—á–∏–≤–∞–µ–º –º–µ–¥–∏–∞ –ø–æ –ø–æ–ª—É—á–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ
                media_url = data['url']
                response = requests.get(media_url, stream=True, timeout=30)
                
                if response.status_code == 200:
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                    ext = 'mp4' if 'video' in response.headers.get('content-type', '') else 'jpg'
                    file_path = os.path.join(tempfile.gettempdir(), f"instagram_{int(time.time())}.{ext}")
                    
                    with open(file_path, 'wb') as f:
                        for chunk in response.iter_content(chunk_size=8192):
                            f.write(chunk)
                    
                    if os.path.getsize(file_path) > 0:
                        return file_path
                    
                    os.remove(file_path)
                
        raise Exception("–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª")
        
    except Exception as e:
        raise Exception(f"–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –æ—à–∏–±–∫–∞: {e}")

# ------------------------- –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò -------------------------

def extract_first_url(text: str) -> str:
    match = re.search(r"(https?://[^\s]+)", text)
    return match.group(1) if match else ""

def normalize_url(url: str) -> str:
    if "youtu.be/" in url:
        video_id = url.split("/")[-1].split("?")[0]
        return f"https://www.youtube.com/watch?v={video_id}"
    if "youtube.com/shorts/" in url:
        video_id = url.split("/shorts/")[-1].split("?")[0]
        return f"https://www.youtube.com/watch?v={video_id}"
    return url

def get_media_type(file_path: str) -> str:
    """–û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –º–µ–¥–∏–∞ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é —Ñ–∞–π–ª–∞"""
    if not file_path:
        return "unknown"
    
    ext = file_path.lower().split('.')[-1]
    
    if ext in ['mp4', 'webm', 'mkv', 'mov', 'avi']:
        return "video"
    elif ext in ['jpg', 'jpeg', 'png', 'webp', 'gif']:
        return "photo"
    else:
        return "unknown"

async def safe_send_video(client, chat_id, file_path, caption=""):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ"""
    try:
        if not os.path.exists(file_path):
            raise Exception(f"–§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {file_path}")
            
        file_size = os.path.getsize(file_path)
        if file_size == 0:
            raise Exception(f"–§–∞–π–ª –ø—É—Å—Ç–æ–π: {file_path}")
            
        return await client.send_video(
            chat_id=chat_id,
            video=file_path,
            caption=caption,
            supports_streaming=True
        )
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ: {e}")
        raise

async def safe_send_photo(client, chat_id, file_path, caption=""):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ"""
    try:
        if not os.path.exists(file_path):
            raise Exception(f"–§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {file_path}")
            
        file_size = os.path.getsize(file_path)
        if file_size == 0:
            raise Exception(f"–§–∞–π–ª –ø—É—Å—Ç–æ–π: {file_path}")
            
        return await client.send_photo(
            chat_id=chat_id,
            photo=file_path,
            caption=caption
        )
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ: {e}")
        raise

# ------------------------- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò -------------------------

@app.on_message(filters.command("start"))
async def start(client, message):
    message_id = f"start_{message.id}_{message.from_user.id}"
    
    if message_id in processed_messages:
        return
        
    processed_messages.add(message_id)
    
    has_cookies = check_cookies_file()
    
    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç! üëã\n\n"
        "üì• **YouTube:** ‚úÖ –í—Å–µ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!\n"
        "‚Ä¢ –í–∏–¥–µ–æ, Shorts, –º—É–∑—ã–∫–∞\n"
        "‚Ä¢ –ë—ã—Å—Ç—Ä–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ\n\n"
    )
    
    if has_cookies:
        welcome_text += (
            "üì∏ **Instagram:** ‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ\n"
            "‚Ä¢ –ü—É–±–ª–∏—á–Ω—ã–µ –ø–æ—Å—Ç—ã (–∏–Ω–æ–≥–¥–∞)\n"
            "‚Ä¢ –¢—Ä–µ–±—É—é—Ç—Å—è –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ cookies\n"
            "‚Ä¢ –ú–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑-–∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π Instagram\n\n"
        )
    else:
        welcome_text += (
            "üì∏ **Instagram:** ‚ùå –¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n"
            "‚Ä¢ –ù—É–∂–µ–Ω —Ñ–∞–π–ª cookies.txt\n"
            "‚Ä¢ –¢–æ–ª—å–∫–æ –ø—É–±–ª–∏—á–Ω—ã–µ –ø–æ—Å—Ç—ã\n"
            "‚Ä¢ –ß–∞—Å—Ç–æ –±—ã–≤–∞—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è\n\n"
        )
    
    welcome_text += (
        "‚ö° –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É!\n"
        "üîÑ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤"
    )
    
    await message.reply_text(welcome_text)

@app.on_message(filters.command(["help", "info"]))
async def help_command(client, message):
    message_id = f"help_{message.id}_{message.from_user.id}"
    
    if message_id in processed_messages:
        return
        
    processed_messages.add(message_id)
    
    has_cookies = check_cookies_file()
    
    help_text = (
        "ü§ñ **–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É**\n\n"
        "üé• **YouTube (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è):**\n"
        "‚Ä¢ ‚úÖ –í–∏–¥–µ–æ –ª—é–±–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n"
        "‚Ä¢ ‚úÖ YouTube Shorts\n"
        "‚Ä¢ ‚úÖ –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∫–ª–∏–ø—ã\n"
        "‚Ä¢ ‚úÖ –°—Ç–∞–±–∏–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞\n\n"
    )
    
    if has_cookies:
        help_text += (
            "üì∏ **Instagram (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ):**\n"
            "‚Ä¢ ‚ö†Ô∏è –¢–æ–ª—å–∫–æ –ø—É–±–ª–∏—á–Ω—ã–µ –ø–æ—Å—Ç—ã\n"
            "‚Ä¢ ‚ö†Ô∏è –ú–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å\n"
            "‚Ä¢ ‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ cookies\n"
            "‚Ä¢ ‚ùå –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã\n"
            "‚Ä¢ ‚ùå –ß–∞—Å—Ç—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è\n\n"
        )
    else:
        help_text += (
            "üì∏ **Instagram:**\n"
            "‚Ä¢ ‚ùå –¢—Ä–µ–±—É–µ—Ç —Ñ–∞–π–ª cookies.txt\n"
            "‚Ä¢ ‚ùå –°–ª–æ–∂–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞\n"
            "‚Ä¢ ‚ùå –ß–∞—Å—Ç—ã–µ –æ—à–∏–±–∫–∏\n\n"
        )
    
    help_text += (
        "üí° **–°–æ–≤–µ—Ç:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ YouTube –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è!\n"
        "üìù –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ."
    )
    
    await message.reply_text(help_text)

@app.on_message(filters.command("test"))
async def test_command(client, message):
    """–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Å—ã–ª–æ–∫"""
    try:
        text = message.text.split(' ', 1)
        if len(text) < 2:
            await message.reply_text("üìù –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /test <—Å—Å—ã–ª–∫–∞>")
            return
        
        url = text[1].strip()
        
        if "youtube.com" in url or "youtu.be" in url:
            await message.reply_text("‚úÖ YouTube —Å—Å—ã–ª–∫–∞ - –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å!")
        elif "instagram.com" in url:
            has_cookies = check_cookies_file()
            if has_cookies:
                await message.reply_text("‚ö†Ô∏è Instagram —Å—Å—ã–ª–∫–∞ - –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑-–∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã")
            else:
                await message.reply_text("‚ùå Instagram —Å—Å—ã–ª–∫–∞ - —Ç—Ä–µ–±—É–µ—Ç—Å—è cookies.txt —Ñ–∞–π–ª")
        else:
            await message.reply_text("‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è —Å—Å—ã–ª–∫–∞")
            
    except Exception as e:
        await message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")

@app.on_message(filters.text & filters.private)
async def handle_text(client, message):
    if message.text.startswith('/'):
        return
    
    message_id = f"text_{message.id}_{message.from_user.id}"
    
    if message_id in processed_messages:
        return
        
    user_id = message.from_user.id
    text = message.text.strip()
    
    url = extract_first_url(text)
    if not url:
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –¥–æ–º–µ–Ω—ã
    supported_domains = ["youtube.com", "youtu.be", "instagram.com"]
    if not any(domain in url for domain in supported_domains):
        await message.reply_text(
            "‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è —Å—Å—ã–ª–∫–∞\n\n"
            "üé• **–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è:**\n"
            "‚Ä¢ YouTube (youtube.com, youtu.be) - ‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è\n"
            "‚Ä¢ Instagram (instagram.com) - ‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ\n\n"
            "üí° –î–ª—è –Ω–∞–¥–µ–∂–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ YouTube —Å—Å—ã–ª–∫–∏"
        )
        return

    processed_messages.add(message_id)
    
    if user_id in user_processing and user_processing[user_id].get('processing'):
        temp_msg = await message.reply_text("‚è≥ –í–∞—à –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∑–∞–ø—Ä–æ—Å –µ—â–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...")
        await asyncio.sleep(3)
        await temp_msg.delete()
        processed_messages.discard(message_id)
        return

    user_processing[user_id] = {'processing': True}
    status = None
    
    try:
        url = normalize_url(url)
        status = await message.reply_text("‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–∫–∏...")
        
        if "youtube" in url or "youtu.be" in url:
            # YouTube –æ–±—Ä–∞–±–æ—Ç–∫–∞ - –û–°–ù–û–í–ù–û–ô –†–ê–ë–û–ß–ò–ô –ú–ï–¢–û–î
            tmp_dir = tempfile.mkdtemp()
            file_path = None
            
            try:
                await status.edit_text("üì• –°–∫–∞—á–∏–≤–∞—é YouTube –≤–∏–¥–µ–æ...")
                file_path = await asyncio.to_thread(download_youtube_video, url, tmp_dir)
                
                await status.edit_text("üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ...")
                await safe_send_video(
                    client,
                    message.chat.id,
                    file_path,
                    caption="üì• YouTube –≤–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ —á–µ—Ä–µ–∑ @azams_bot"
                )
                logger.info("‚úÖ YouTube –≤–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")

            except Exception as e:
                logger.error(f"‚ùå YouTube –æ—à–∏–±–∫–∞: {e}")
                raise Exception(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å YouTube –≤–∏–¥–µ–æ\n\n–ü—Ä–∏—á–∏–Ω–∞: {str(e)}")
                
            finally:
                # –û—á–∏—Å—Ç–∫–∞
                if file_path and os.path.exists(file_path):
                    try:
                        os.remove(file_path)
                    except:
                        pass
                if os.path.exists(tmp_dir):
                    try:
                        for file in os.listdir(tmp_dir):
                            os.remove(os.path.join(tmp_dir, file))
                        os.rmdir(tmp_dir)
                    except:
                        pass
                
        elif "instagram.com" in url:
            # Instagram –æ–±—Ä–∞–±–æ—Ç–∫–∞ - –ó–ê–ü–ê–°–ù–û–ô –ú–ï–¢–û–î
            tmp_dir = tempfile.mkdtemp()
            file_path = None
            
            try:
                await status.edit_text("‚ö†Ô∏è –ü—Ä–æ–±—É—é —Å–∫–∞—á–∞—Ç—å Instagram...")
                
                # –ü—Ä–æ–±—É–µ–º –≤—Å–µ –º–µ—Ç–æ–¥—ã
                file_path, info = await asyncio.to_thread(download_instagram_all_methods, url, tmp_dir)
                
                if not file_path:
                    raise Exception("–í—Å–µ –º–µ—Ç–æ–¥—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏")
                
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –º–µ–¥–∏–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
                media_type = get_media_type(file_path)
                await status.edit_text("üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é...")
                
                if media_type == "video":
                    await safe_send_video(
                        client,
                        message.chat.id,
                        file_path,
                        caption="üì• Instagram –≤–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ —á–µ—Ä–µ–∑ @azams_bot"
                    )
                else:
                    await safe_send_photo(
                        client,
                        message.chat.id,
                        file_path,
                        caption="üì∏ Instagram —Ñ–æ—Ç–æ —Å–∫–∞—á–∞–Ω–æ —á–µ—Ä–µ–∑ @azams_bot"
                    )

            except Exception as e:
                logger.error(f"‚ùå Instagram –æ—à–∏–±–∫–∞: {e}")
                
                # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å YouTube –≤–º–µ—Å—Ç–æ Instagram
                raise Exception(
                    "‚ùå Instagram –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω\n\n"
                    "üì∏ **–ü—Ä–æ–±–ª–µ–º—ã —Å Instagram:**\n"
                    "‚Ä¢ Instagram –±–ª–æ–∫–∏—Ä—É–µ—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ\n"
                    "‚Ä¢ –¢—Ä–µ–±—É–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ cookies\n"
                    "‚Ä¢ –ß–∞—Å—Ç—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞\n\n"
                    "üé• **–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º:**\n"
                    "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å YouTube —Å—Å—ã–ª–∫–∏\n"
                    "‚Ä¢ YouTube —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ –∏ –±—ã—Å—Ç—Ä–æ\n"
                    "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ –ª—é–±–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞\n\n"
                    "üí° –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ!"
                )
                
            finally:
                # –û—á–∏—Å—Ç–∫–∞
                if file_path and os.path.exists(file_path):
                    try:
                        os.remove(file_path)
                    except:
                        pass
                if os.path.exists(tmp_dir):
                    try:
                        for file in os.listdir(tmp_dir):
                            os.remove(os.path.join(tmp_dir, file))
                        os.rmdir(tmp_dir)
                    except:
                        pass

        # –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        await message.delete()

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
        
        if status:
            try:
                error_msg = await message.reply_text(str(e))
                await asyncio.sleep(15)  # –î–æ–ª—å—à–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                await error_msg.delete()
            except:
                pass
                
    finally:
        if status:
            try:
                await status.delete()
            except:
                pass
        if user_id in user_processing:
            user_processing[user_id]['processing'] = False

# ------------------------- –ó–ê–ü–£–°–ö -------------------------
if __name__ == "__main__":
    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–µ—Å—Å–∏–π
    old_sessions = ["fast_bot.session", "fast_bot.session-journal"]
    for session_file in old_sessions:
        if os.path.exists(session_file):
            try:
                os.remove(session_file)
                logger.info(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª —Å–µ—Å—Å–∏–∏: {session_file}")
            except Exception as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {session_file}: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ cookies
    has_cookies = check_cookies_file()
    if has_cookies:
        logger.info("‚úÖ –§–∞–π–ª cookies.txt –Ω–∞–π–¥–µ–Ω")
    else:
        logger.warning("‚ö†Ô∏è –§–∞–π–ª cookies.txt –Ω–µ –Ω–∞–π–¥–µ–Ω - Instagram –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ YouTube...")
    logger.info("üí° Instagram —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ –∏–∑-–∑–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã")
    app.run()
